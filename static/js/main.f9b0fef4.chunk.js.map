{"version":3,"sources":["components/Addtodo.js","components/Todoitem.js","components/Todos.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Addtodo","state","content","handleChaneg","e","setState","target","value","handleSubmit","preventDefault","props","addtodo","id","shortid","editContent","compeleted","order","onSubmit","this","className","placeholder","type","onChange","Component","Todoitem","todo","handleChange","onChangeOrde","onSave","key","saveNewtodo","onPress","saveNewOrder","console","log","deletetodo","toggleEdit","toggleCompeleted","onKeyPress","onClick","style","textDecoration","Todos","todos","sort","a","b","map","Search","handleSearchChange","App","searchField","sectionToShow","filter","editTodo","compeletedTodo","updateShowSection","button","filteredTodos","toLowerCase","includes","toLocaleLowerCase","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9b0fef4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nexport default class Addtodo extends Component {\r\n  state = {\r\n    content: \"\",\r\n  };\r\n  handleChaneg = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.content !== \"\") {\r\n      this.props.addtodo({\r\n        id: shortid(),\r\n        content: this.state.content,\r\n        editContent: false,\r\n        compeleted: false,\r\n        order: 1,\r\n      });\r\n      this.setState({\r\n        content: \"\",\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"row \">\r\n          <div className=\"col s12 m8 l10 \">\r\n            <label>Add new todo: </label>\r\n            <input\r\n              placeholder=\"Enter New Todo\"\r\n              type=\"text\"\r\n              className=\"white-text\"\r\n              value={this.state.content}\r\n              onChange={this.handleChaneg}\r\n            />\r\n          </div>\r\n          \r\n          <button className=\"col s12 m4 l2 waves-effect waves-light btn-large \">ADD</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Todoitem extends Component {\r\n  state = {\r\n    content: this.props.todo.content,\r\n    order: this.props.todo.order,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  onChangeOrde = (e) => {\r\n    this.setState({\r\n      order: e.target.value,\r\n    });\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  onSave = (e) => {\r\n    if (e.key === \"Enter\" || e.target.type === \"submit\") {\r\n      this.props.saveNewtodo(this.props.todo.id, this.state.content);\r\n    }\r\n  };\r\n\r\n  onPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.props.saveNewOrder(this.props.todo.id, this.state.order);\r\n    }\r\n    console.log(this.state.order);\r\n  };\r\n\r\n  render() {\r\n    const { todo, deletetodo, toggleEdit, toggleCompeleted } = this.props;\r\n    return (\r\n      <div className=\"todos collection\">\r\n        <div className=\"collection-item center row\">\r\n          <input\r\n            className=\"col s12 m2 l2 center\"\r\n            type=\"number\"\r\n            value={this.state.order}\r\n            onChange={this.onChangeOrde}\r\n            onKeyPress={this.onPress}\r\n          />\r\n          {todo.editContent === true ? (\r\n            <div>\r\n                <input\r\n                className=\"col s12 m6 l6 center\"\r\n                  value={this.state.content}\r\n                  onChange={this.handleChange}\r\n                  onKeyPress={(e) => this.onSave(e)}\r\n                ></input>\r\n              \r\n              <button\r\n                className=\"col s12 m2 l2 waves-effect waves-light btn-large\"\r\n                onClick={(e) => this.onSave(e)}\r\n              >\r\n                Save\r\n              </button>\r\n\r\n              <button\r\n                className=\"col s12 m2 l2 waves-effect waves-light btn-large\"\r\n                onClick={() => toggleEdit(todo.id)}\r\n              >\r\n                Cancle\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n            \r\n              <h5\r\n                className=\"col s12 m6 l6\"\r\n                style={{ textDecoration: todo.compeleted ? \"line-through\" : \"\" }}\r\n                onClick={() => toggleCompeleted(todo.id)}\r\n              >\r\n       \r\n                {todo.content}\r\n              </h5>\r\n              <button\r\n                className=\"col s12 m2 l2 waves-effect waves-light btn-large\"\r\n                onClick={() => toggleEdit(todo.id)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"col s12 m2 l2 waves-effect waves-light btn-large\"\r\n                onClick={() => deletetodo(todo.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Todoitem from \"./Todoitem.js\";\r\n\r\nexport default class Todos extends Component {\r\n  render() {\r\n    const { deletetodo, toggleEdit, saveNewtodo, saveNewOrder, toggleCompeleted } = this.props;\r\n    return (\r\n      <div>\r\n        {this.props.todos\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((todo) => (\r\n            <Todoitem\r\n              key={todo.id}\r\n              todo={todo}\r\n              deletetodo={deletetodo}\r\n              toggleEdit={toggleEdit}\r\n              saveNewtodo={saveNewtodo}\r\n              saveNewOrder={saveNewOrder}\r\n              toggleCompeleted={toggleCompeleted}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Search extends Component {\r\n  render() {\r\n    const { handleSearchChange } = this.props;\r\n    return (\r\n      <div>\r\n        <form className=\"row\">\r\n          <div className=\"col s12 m12 l12\">\r\n            <label>Search todo: </label>\r\n            <input type=\"search\" className=\"white-text\" placeholder=\"Search\"\r\n onChange={handleSearchChange} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Addtodo from \"./components/Addtodo.js\";\nimport Todos from \"./components/Todos.js\";\nimport Search from \"./components/Search.js\";\n\nexport default class App extends Component {\n  state = {\n    todos: [],\n    searchField: \"\",\n    sectionToShow: \"all\",\n  };\n\n  addtodo = (todo) => {\n    this.setState({\n      todos: [...this.state.todos, todo],\n    });\n    console.log(this.state.todos);\n  };\n\n  deletetodo = (id) => {\n    const todos = this.state.todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos,\n    });\n  };\n\n  handleSearchChange = (e) => {\n    this.setState({\n      searchField: e.target.value,\n    });\n    // console.log(e.target.value);\n  };\n\n  toggleEdit = (id) => {\n    const editTodo = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        // console.log(todo.editContent);\n        return { ...todo, editContent: !todo.editContent };\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({\n      todos: editTodo,\n    });\n  };\n\n  saveNewtodo = (id, content) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        return todo.id === id ? { ...todo, editContent: !todo.editContent, content } : todo;\n      }),\n    });\n  };\n\n  saveNewOrder = (id, order) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        return todo.id === id ? { ...todo, order } : todo;\n      }),\n    });\n    console.log(this.state.order);\n  };\n\n  toggleCompeleted = (id) => {\n    const compeletedTodo = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        // console.log(todo.editContent);\n        return { ...todo, compeleted: !todo.compeleted };\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({\n      todos: compeletedTodo,\n    });\n  };\n\n  updateShowSection = (button) => {\n    this.setState({\n      sectionToShow: button,\n    });\n    console.log(button);\n  };\n\n  render() {\n    let todos = [];\n\n    if (this.state.sectionToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.sectionToShow === \"processing\") {\n      todos = this.state.todos.filter((todo) => !todo.compeleted);\n    } else if (this.state.sectionToShow === \"done\") {\n      todos = this.state.todos.filter((todo) => todo.compeleted);\n    }\n\n    const filteredTodos = todos.filter((todo) => {\n      return todo.content.toLowerCase().includes(this.state.searchField.toLocaleLowerCase());\n    });\n\n    return (\n      <div className=\"todo-app container\">\n        <h1 className=\"center cyan-text\">TodoList</h1>\n        <Addtodo addtodo={this.addtodo} />\n        <Search handleSearchChange={this.handleSearchChange} />\n        <div className=\"row\">\n          <button\n            className=\"col s12 m4 l4 waves-effect waves-light btn-large\"\n            onClick={() => this.updateShowSection(\"all\")}\n          >\n            All\n          </button>\n          <button\n            className=\"col s12 m4 l4 waves-effect waves-light btn-large\"\n            onClick={() => this.updateShowSection(\"processing\")}\n          >\n            Processing\n          </button>\n          <button\n            className=\"col s12 m4 l4 waves-effect waves-light btn-large\"\n            onClick={() => this.updateShowSection(\"done\")}\n          >\n            Done\n          </button>\n        </div>\n        <Todos\n          todos={filteredTodos}\n          deletetodo={this.deletetodo}\n          toggleEdit={this.toggleEdit}\n          saveNewtodo={this.saveNewtodo}\n          saveNewOrder={this.saveNewOrder}\n          toggleCompeleted={this.toggleCompeleted}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}